@use "sass:math";
$width-value: 750;
$master-width: width-value + px;
$content-width-value: 100;
$content-width: $content-width-value + #{"%"};

$family: "Poppins", sans-serif;

// font: 和文
@mixin family-main {
  font-family: 游ゴシック体, 游ゴシック Medium, Yu Gothic Medium, Yu Gothic, YuGothic, Hiragino Kaku Gothic ProN, Meiryo, sans-serif;
}

@mixin family-TimesNewRoman {
  font-family: "Times New Roman", sans-serif;
  font-weight: 400;
  font-style: italic;
}

@mixin family-angie-sans {
  font-family: "angie-sans", sans-serif;
  font-weight: 400;
  font-style: italic;
}

@mixin font-feature-settings_type1 {
  // イラレの文字間カーニング:0
  // イラレの文字組み設定: なし・行末約物半角
  font-feature-settings: normal;
}

@mixin font-feature-settings_type2 {
  // イラレの文字間カーニング:0
  // イラレの文字組み設定: 約物半角
  font-feature-settings: "halt";
}

@mixin font-feature-settings_type3 {
  // イラレの文字間カーニング:メトリクス
  // イラレの文字組み設定: なし
  font-feature-settings: "palt";
}

@mixin font-feature-settings_type4 {
  // イラレの文字間カーニング:メトリクス
  // イラレの文字組み設定: 行末約物半角
  font-feature-settings: "pwid";
}

@mixin font-feature-settings_type5 {
  // イラレの文字間カーニング:メトリクス
  // イラレの文字組み設定: 行末約物半角・全角英数字は文字詰めしない場合（但しSafariだとpwidと同じ挙動になるのであまり使用しない方がよさそう）
  font-feature-settings: "pkna";
}


// 左に行間数値、右にフォントサイズ
@mixin line-height($leading, $font-size) {
  line-height: calc($leading/$font-size);
}

// pcフォントサイズ指定
@mixin rem($size) {
  font-size: $size + px;
  font-size: math.div($size, 10) + rem;
}

// spフォントサイズ指定
$spd-width: 750; // SPデザインデータの横幅の数値を入れる

@mixin calc_font($size, $width: $spd-width) {
  font-size: $size + px;
  font-size: calc($size *(#{100vw}/ #{$width}));
}

@mixin calc_width($size, $width: $spd-width) {
  max-width: 300 + px;
  width: calc(300 *(#{100vw}/ #{$width}));
}

@mixin rem_width($size, $pagesize: 10) {
  max-width: $size + px;
  width: math.div($size, $pagesize)+rem;
}



@mixin transition($time: 0.3) {
  -webkit-transition: all $time + s;
  transition: all $time + s;
}

@mixin theme_reset {
  padding: 0;
  margin: 0;
}

@mixin button-reset {
  background-color: transparent;
  border: none;
  cursor: pointer;
  outline: none;
  padding: 0;
  appearance: none;
}

@mixin reset {

  ol,
  ul,
  li {
    list-style: none;
  }

  ul {
    list-style: none;

    // padding: 0;
    // margin: 0;
    li {
      list-style: none;
      // padding: 0;
      // margin: 0;
    }
  }

  ul li {
    list-style: none;
  }
}

@function get_rem($size, $pagesize: 10) {
  @return math.div($size, $pagesize)+rem;
}

@function get_rate($size, $viewport: $width-value) {
  $rate: math.div($size, $viewport);
  @return calc((#{$size} / #{$viewport}) * 100%);
}

@function get_px($size) {
  @return #{$size / 2}#{"px"};
}

@function get_ls($size) {
  @return #{$size / 1000}#{"em"};
}

@function get_lh($size, $lineheight) {
  @return $lineheight / $size;
}

@function get_fz($size, $viewport: $width-value) {
  $rate: $size / $viewport;
  @return #{$rate * 100}#{"vw"};
}

@function get_aspect($width: 4, $height: 3) {
  $rate: math.div($height, $width);
  @return #{$rate * 100}#{"%"} 0 0;
}

@function get_vw($size, $viewport: 320) {
  $rate: 100 / $viewport;
  @return $rate * $size * 1vw;
}